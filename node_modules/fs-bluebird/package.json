{
  "name": "fs-bluebird",
  "version": "0.1.2",
  "description": "simple fs wrapper intended to cover edge cases that promisifyAll doesn't cover (e.g. fs.exists)",
  "main": "index.js",
  "scripts": {
    "test": "mocha -u tdd --no-colors --reporter spec --require mocha-clean tests.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/olsonpm/fs-bluebird.git"
  },
  "keywords": [
    "fs",
    "bluebird",
    "fs-bluebird"
  ],
  "author": {
    "name": "Phil Olson"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/olsonpm/fs-bluebird/issues"
  },
  "homepage": "https://github.com/olsonpm/fs-bluebird",
  "devDependencies": {
    "chai": "^1.10.0",
    "mocha": "^2.1.0",
    "mocha-clean": "^0.4.0"
  },
  "dependencies": {
    "bluebird": "^2.9.1"
  },
  "readme": "# fs-bluebird\n\nThe intention of this library is to retain the same *Async prefix syntax while also covering the edge case of fs.exists (which doesn't follow the [error, result] callback parameter pattern).\n\nIf there are more edge cases to take care of I will be happy to add them to this library.  Better yet, you could send me a pull request with the fix and associated mocha test and I'll merge.\n\n###fs.existsAsync example:\n\n```\nvar bFs = require('fs-bluebird');\n\nvar fileThatExists = './index.js';\n\nbFs.existsAsync(fileThatExists)\n  .then(function(exists) {\n    if (exists) {\n      // do something with file\n    }\n  });\n```\n\nFeel free to contact me with questions\n",
  "readmeFilename": "README.md",
  "gitHead": "647601e29f61a8b3b6fdf3ac551e464618668edc",
  "_id": "fs-bluebird@0.1.2",
  "_shasum": "075e63494c844596f076361543e696ce847150cc",
  "_from": "fs-bluebird@^0.1.1"
}
